Terminals unused in grammar

   UMINUS


Grammar

    0 $accept: prog_start $end

    1 prog_start: functions

    2 functions: function functions
    3          | %empty

    4 function_ident: FUNCTION IDENT

    5 begin_params: BEGIN_PARAMS

    6 end_params: END_PARAMS

    7 function: function_ident SEMICOLON begin_params declarations end_params BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    8 declarations: declaration SEMICOLON declarations
    9             | %empty

   10 declaration: identifiers COLON assign_dec

   11 assign_dec: INTEGER
   12           | ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   13           | ARRAY L_SQUARE_BRACKET SUB NUMBER R_SQUARE_BRACKET OF INTEGER

   14 identifiers: IDENT
   15            | IDENT COMMA identifiers

   16 statements: statement SEMICOLON statements
   17           | statement SEMICOLON

   18 statement: st1
   19          | st2
   20          | st3
   21          | st4
   22          | st5
   23          | st6
   24          | st7
   25          | st8
   26          | st9

   27 st1: assign_variable ASSIGN expression

   28 assign_variable: IDENT
   29                | IDENT L_SQUARE_BRACKET expressions R_SQUARE_BRACKET

   30 st2: if_bool THEN statements ENDIF

   31 st3: if_bool THEN statements if_else ENDIF

   32 if_bool: IF bool_exp

   33 if_else: ELSE statements

   34 st4: while_bool statements ENDLOOP

   35 st5: do_loop WHILE bool_exp

   36 while_bool: while bool_exp BEGINLOOP

   37 while: WHILE

   38 do_loop: do statements ENDLOOP

   39 do: DO BEGINLOOP

   40 st6: READ readVars

   41 st7: WRITE writeVars

   42 readVars: var
   43         | var COMMA readVars

   44 writeVars: var
   45          | var COMMA readVars

   46 st8: CONTINUE

   47 st9: RETURN expression

   48 bool_exp: relation_and_exp
   49         | relation_and_exp OR bool_exp

   50 relation_and_exp: relation_exp
   51                 | relation_exp AND relation_and_exp

   52 relation_exp: rexp
   53             | NOT rexp

   54 rexp: expression comp expression
   55     | TRUE
   56     | FALSE
   57     | L_PAREN bool_exp R_PAREN

   58 comp: EQ
   59     | NEQ
   60     | LT
   61     | GT
   62     | LTE
   63     | GTE

   64 expressions: expression
   65            | expression COMMA expression

   66 expression: mult_expression
   67           | mult_expression ADD expression
   68           | mult_expression SUB expression

   69 mult_expression: term
   70                | term MULT mult_expression
   71                | term DIV mult_expression
   72                | term MOD mult_expression

   73 term: var
   74     | NUMBER
   75     | SUB NUMBER
   76     | L_PAREN expression R_PAREN
   77     | SUB L_PAREN expression R_PAREN
   78     | IDENT L_PAREN expressions R_PAREN

   79 var: IDENT
   80    | IDENT L_SQUARE_BRACKET expressions R_SQUARE_BRACKET


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 4
BEGIN_PARAMS (259) 5
END_PARAMS (260) 6
BEGIN_LOCALS (261) 7
END_LOCALS (262) 7
BEGIN_BODY (263) 7
END_BODY (264) 7
INTEGER (265) 11 12 13
ARRAY (266) 12 13
OF (267) 12 13
IF (268) 32
THEN (269) 30 31
ENDIF (270) 30 31
ELSE (271) 33
WHILE (272) 35 37
DO (273) 39
BEGINLOOP (274) 36 39
ENDLOOP (275) 34 38
CONTINUE (276) 46
READ (277) 40
WRITE (278) 41
AND (279) 51
OR (280) 49
NOT (281) 53
TRUE (282) 55
FALSE (283) 56
RETURN (284) 47
SUB (285) 13 68 75 77
ADD (286) 67
MULT (287) 70
DIV (288) 71
MOD (289) 72
EQ (290) 58
NEQ (291) 59
LT (292) 60
GT (293) 61
LTE (294) 62
GTE (295) 63
SEMICOLON (296) 7 8 16 17
COLON (297) 10
COMMA (298) 15 43 45 65
L_PAREN (299) 57 76 77 78
R_PAREN (300) 57 76 77 78
L_SQUARE_BRACKET (301) 12 13 29 80
R_SQUARE_BRACKET (302) 12 13 29 80
ASSIGN (303) 27
NUMBER (304) 12 13 74 75
IDENT (305) 4 14 15 28 29 78 79 80
UMINUS (306)


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
prog_start (53)
    on left: 1, on right: 0
functions (54)
    on left: 2 3, on right: 1 2
function_ident (55)
    on left: 4, on right: 7
begin_params (56)
    on left: 5, on right: 7
end_params (57)
    on left: 6, on right: 7
function (58)
    on left: 7, on right: 2
declarations (59)
    on left: 8 9, on right: 7 8
declaration (60)
    on left: 10, on right: 8
assign_dec (61)
    on left: 11 12 13, on right: 10
identifiers (62)
    on left: 14 15, on right: 10 15
statements (63)
    on left: 16 17, on right: 7 16 30 31 33 34 38
statement (64)
    on left: 18 19 20 21 22 23 24 25 26, on right: 16 17
st1 (65)
    on left: 27, on right: 18
assign_variable (66)
    on left: 28 29, on right: 27
st2 (67)
    on left: 30, on right: 19
st3 (68)
    on left: 31, on right: 20
if_bool (69)
    on left: 32, on right: 30 31
if_else (70)
    on left: 33, on right: 31
st4 (71)
    on left: 34, on right: 21
st5 (72)
    on left: 35, on right: 22
while_bool (73)
    on left: 36, on right: 34
while (74)
    on left: 37, on right: 36
do_loop (75)
    on left: 38, on right: 35
do (76)
    on left: 39, on right: 38
st6 (77)
    on left: 40, on right: 23
st7 (78)
    on left: 41, on right: 24
readVars (79)
    on left: 42 43, on right: 40 43 45
writeVars (80)
    on left: 44 45, on right: 41
st8 (81)
    on left: 46, on right: 25
st9 (82)
    on left: 47, on right: 26
bool_exp (83)
    on left: 48 49, on right: 32 35 36 49 57
relation_and_exp (84)
    on left: 50 51, on right: 48 49 51
relation_exp (85)
    on left: 52 53, on right: 50 51
rexp (86)
    on left: 54 55 56 57, on right: 52 53
comp (87)
    on left: 58 59 60 61 62 63, on right: 54
expressions (88)
    on left: 64 65, on right: 29 78 80
expression (89)
    on left: 66 67 68, on right: 27 47 54 64 65 67 68 76 77
mult_expression (90)
    on left: 69 70 71 72, on right: 66 67 68 70 71 72
term (91)
    on left: 73 74 75 76 77 78, on right: 69 70 71 72
var (92)
    on left: 79 80, on right: 42 43 44 45 73


State 0

    0 $accept: . prog_start $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (functions)

    prog_start      go to state 2
    functions       go to state 3
    function_ident  go to state 4
    function        go to state 5


State 1

    4 function_ident: FUNCTION . IDENT

    IDENT  shift, and go to state 6


State 2

    0 $accept: prog_start . $end

    $end  shift, and go to state 7


State 3

    1 prog_start: functions .

    $default  reduce using rule 1 (prog_start)


State 4

    7 function: function_ident . SEMICOLON begin_params declarations end_params BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 8


State 5

    2 functions: function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (functions)

    functions       go to state 9
    function_ident  go to state 4
    function        go to state 5


State 6

    4 function_ident: FUNCTION IDENT .

    $default  reduce using rule 4 (function_ident)


State 7

    0 $accept: prog_start $end .

    $default  accept


State 8

    7 function: function_ident SEMICOLON . begin_params declarations end_params BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 10

    begin_params  go to state 11


State 9

    2 functions: function functions .

    $default  reduce using rule 2 (functions)


State 10

    5 begin_params: BEGIN_PARAMS .

    $default  reduce using rule 5 (begin_params)


State 11

    7 function: function_ident SEMICOLON begin_params . declarations end_params BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 12

    $default  reduce using rule 9 (declarations)

    declarations  go to state 13
    declaration   go to state 14
    identifiers   go to state 15


State 12

   14 identifiers: IDENT .
   15            | IDENT . COMMA identifiers

    COMMA  shift, and go to state 16

    $default  reduce using rule 14 (identifiers)


State 13

    7 function: function_ident SEMICOLON begin_params declarations . end_params BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 17

    end_params  go to state 18


State 14

    8 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 19


State 15

   10 declaration: identifiers . COLON assign_dec

    COLON  shift, and go to state 20


State 16

   15 identifiers: IDENT COMMA . identifiers

    IDENT  shift, and go to state 12

    identifiers  go to state 21


State 17

    6 end_params: END_PARAMS .

    $default  reduce using rule 6 (end_params)


State 18

    7 function: function_ident SEMICOLON begin_params declarations end_params . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 22


State 19

    8 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 12

    $default  reduce using rule 9 (declarations)

    declarations  go to state 23
    declaration   go to state 14
    identifiers   go to state 15


State 20

   10 declaration: identifiers COLON . assign_dec

    INTEGER  shift, and go to state 24
    ARRAY    shift, and go to state 25

    assign_dec  go to state 26


State 21

   15 identifiers: IDENT COMMA identifiers .

    $default  reduce using rule 15 (identifiers)


State 22

    7 function: function_ident SEMICOLON begin_params declarations end_params BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 12

    $default  reduce using rule 9 (declarations)

    declarations  go to state 27
    declaration   go to state 14
    identifiers   go to state 15


State 23

    8 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 8 (declarations)


State 24

   11 assign_dec: INTEGER .

    $default  reduce using rule 11 (assign_dec)


State 25

   12 assign_dec: ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   13           | ARRAY . L_SQUARE_BRACKET SUB NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 28


State 26

   10 declaration: identifiers COLON assign_dec .

    $default  reduce using rule 10 (declaration)


State 27

    7 function: function_ident SEMICOLON begin_params declarations end_params BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 29


State 28

   12 assign_dec: ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER
   13           | ARRAY L_SQUARE_BRACKET . SUB NUMBER R_SQUARE_BRACKET OF INTEGER

    SUB     shift, and go to state 30
    NUMBER  shift, and go to state 31


State 29

    7 function: function_ident SEMICOLON begin_params declarations end_params BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 32


State 30

   13 assign_dec: ARRAY L_SQUARE_BRACKET SUB . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 33


State 31

   12 assign_dec: ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 34


State 32

    7 function: function_ident SEMICOLON begin_params declarations end_params BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    IF        shift, and go to state 35
    WHILE     shift, and go to state 36
    DO        shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    RETURN    shift, and go to state 41
    IDENT     shift, and go to state 42

    statements       go to state 43
    statement        go to state 44
    st1              go to state 45
    assign_variable  go to state 46
    st2              go to state 47
    st3              go to state 48
    if_bool          go to state 49
    st4              go to state 50
    st5              go to state 51
    while_bool       go to state 52
    while            go to state 53
    do_loop          go to state 54
    do               go to state 55
    st6              go to state 56
    st7              go to state 57
    st8              go to state 58
    st9              go to state 59


State 33

   13 assign_dec: ARRAY L_SQUARE_BRACKET SUB NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 60


State 34

   12 assign_dec: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 61


State 35

   32 if_bool: IF . bool_exp

    NOT      shift, and go to state 62
    TRUE     shift, and go to state 63
    FALSE    shift, and go to state 64
    SUB      shift, and go to state 65
    L_PAREN  shift, and go to state 66
    NUMBER   shift, and go to state 67
    IDENT    shift, and go to state 68

    bool_exp          go to state 69
    relation_and_exp  go to state 70
    relation_exp      go to state 71
    rexp              go to state 72
    expression        go to state 73
    mult_expression   go to state 74
    term              go to state 75
    var               go to state 76


State 36

   37 while: WHILE .

    $default  reduce using rule 37 (while)


State 37

   39 do: DO . BEGINLOOP

    BEGINLOOP  shift, and go to state 77


State 38

   46 st8: CONTINUE .

    $default  reduce using rule 46 (st8)


State 39

   40 st6: READ . readVars

    IDENT  shift, and go to state 78

    readVars  go to state 79
    var       go to state 80


State 40

   41 st7: WRITE . writeVars

    IDENT  shift, and go to state 78

    writeVars  go to state 81
    var        go to state 82


State 41

   47 st9: RETURN . expression

    SUB      shift, and go to state 65
    L_PAREN  shift, and go to state 83
    NUMBER   shift, and go to state 67
    IDENT    shift, and go to state 68

    expression       go to state 84
    mult_expression  go to state 74
    term             go to state 75
    var              go to state 76


State 42

   28 assign_variable: IDENT .
   29                | IDENT . L_SQUARE_BRACKET expressions R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 85

    $default  reduce using rule 28 (assign_variable)


State 43

    7 function: function_ident SEMICOLON begin_params declarations end_params BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 86


State 44

   16 statements: statement . SEMICOLON statements
   17           | statement . SEMICOLON

    SEMICOLON  shift, and go to state 87


State 45

   18 statement: st1 .

    $default  reduce using rule 18 (statement)


State 46

   27 st1: assign_variable . ASSIGN expression

    ASSIGN  shift, and go to state 88


State 47

   19 statement: st2 .

    $default  reduce using rule 19 (statement)


State 48

   20 statement: st3 .

    $default  reduce using rule 20 (statement)


State 49

   30 st2: if_bool . THEN statements ENDIF
   31 st3: if_bool . THEN statements if_else ENDIF

    THEN  shift, and go to state 89


State 50

   21 statement: st4 .

    $default  reduce using rule 21 (statement)


State 51

   22 statement: st5 .

    $default  reduce using rule 22 (statement)


State 52

   34 st4: while_bool . statements ENDLOOP

    IF        shift, and go to state 35
    WHILE     shift, and go to state 36
    DO        shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    RETURN    shift, and go to state 41
    IDENT     shift, and go to state 42

    statements       go to state 90
    statement        go to state 44
    st1              go to state 45
    assign_variable  go to state 46
    st2              go to state 47
    st3              go to state 48
    if_bool          go to state 49
    st4              go to state 50
    st5              go to state 51
    while_bool       go to state 52
    while            go to state 53
    do_loop          go to state 54
    do               go to state 55
    st6              go to state 56
    st7              go to state 57
    st8              go to state 58
    st9              go to state 59


State 53

   36 while_bool: while . bool_exp BEGINLOOP

    NOT      shift, and go to state 62
    TRUE     shift, and go to state 63
    FALSE    shift, and go to state 64
    SUB      shift, and go to state 65
    L_PAREN  shift, and go to state 66
    NUMBER   shift, and go to state 67
    IDENT    shift, and go to state 68

    bool_exp          go to state 91
    relation_and_exp  go to state 70
    relation_exp      go to state 71
    rexp              go to state 72
    expression        go to state 73
    mult_expression   go to state 74
    term              go to state 75
    var               go to state 76


State 54

   35 st5: do_loop . WHILE bool_exp

    WHILE  shift, and go to state 92


State 55

   38 do_loop: do . statements ENDLOOP

    IF        shift, and go to state 35
    WHILE     shift, and go to state 36
    DO        shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    RETURN    shift, and go to state 41
    IDENT     shift, and go to state 42

    statements       go to state 93
    statement        go to state 44
    st1              go to state 45
    assign_variable  go to state 46
    st2              go to state 47
    st3              go to state 48
    if_bool          go to state 49
    st4              go to state 50
    st5              go to state 51
    while_bool       go to state 52
    while            go to state 53
    do_loop          go to state 54
    do               go to state 55
    st6              go to state 56
    st7              go to state 57
    st8              go to state 58
    st9              go to state 59


State 56

   23 statement: st6 .

    $default  reduce using rule 23 (statement)


State 57

   24 statement: st7 .

    $default  reduce using rule 24 (statement)


State 58

   25 statement: st8 .

    $default  reduce using rule 25 (statement)


State 59

   26 statement: st9 .

    $default  reduce using rule 26 (statement)


State 60

   13 assign_dec: ARRAY L_SQUARE_BRACKET SUB NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 94


State 61

   12 assign_dec: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 95


State 62

   53 relation_exp: NOT . rexp

    TRUE     shift, and go to state 63
    FALSE    shift, and go to state 64
    SUB      shift, and go to state 65
    L_PAREN  shift, and go to state 66
    NUMBER   shift, and go to state 67
    IDENT    shift, and go to state 68

    rexp             go to state 96
    expression       go to state 73
    mult_expression  go to state 74
    term             go to state 75
    var              go to state 76


State 63

   55 rexp: TRUE .

    $default  reduce using rule 55 (rexp)


State 64

   56 rexp: FALSE .

    $default  reduce using rule 56 (rexp)


State 65

   75 term: SUB . NUMBER
   77     | SUB . L_PAREN expression R_PAREN

    L_PAREN  shift, and go to state 97
    NUMBER   shift, and go to state 98


State 66

   57 rexp: L_PAREN . bool_exp R_PAREN
   76 term: L_PAREN . expression R_PAREN

    NOT      shift, and go to state 62
    TRUE     shift, and go to state 63
    FALSE    shift, and go to state 64
    SUB      shift, and go to state 65
    L_PAREN  shift, and go to state 66
    NUMBER   shift, and go to state 67
    IDENT    shift, and go to state 68

    bool_exp          go to state 99
    relation_and_exp  go to state 70
    relation_exp      go to state 71
    rexp              go to state 72
    expression        go to state 100
    mult_expression   go to state 74
    term              go to state 75
    var               go to state 76


State 67

   74 term: NUMBER .

    $default  reduce using rule 74 (term)


State 68

   78 term: IDENT . L_PAREN expressions R_PAREN
   79 var: IDENT .
   80    | IDENT . L_SQUARE_BRACKET expressions R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 101
    L_SQUARE_BRACKET  shift, and go to state 102

    $default  reduce using rule 79 (var)


State 69

   32 if_bool: IF bool_exp .

    $default  reduce using rule 32 (if_bool)


State 70

   48 bool_exp: relation_and_exp .
   49         | relation_and_exp . OR bool_exp

    OR  shift, and go to state 103

    $default  reduce using rule 48 (bool_exp)


State 71

   50 relation_and_exp: relation_exp .
   51                 | relation_exp . AND relation_and_exp

    AND  shift, and go to state 104

    $default  reduce using rule 50 (relation_and_exp)


State 72

   52 relation_exp: rexp .

    $default  reduce using rule 52 (relation_exp)


State 73

   54 rexp: expression . comp expression

    EQ   shift, and go to state 105
    NEQ  shift, and go to state 106
    LT   shift, and go to state 107
    GT   shift, and go to state 108
    LTE  shift, and go to state 109
    GTE  shift, and go to state 110

    comp  go to state 111


State 74

   66 expression: mult_expression .
   67           | mult_expression . ADD expression
   68           | mult_expression . SUB expression

    SUB  shift, and go to state 112
    ADD  shift, and go to state 113

    $default  reduce using rule 66 (expression)


State 75

   69 mult_expression: term .
   70                | term . MULT mult_expression
   71                | term . DIV mult_expression
   72                | term . MOD mult_expression

    MULT  shift, and go to state 114
    DIV   shift, and go to state 115
    MOD   shift, and go to state 116

    $default  reduce using rule 69 (mult_expression)


State 76

   73 term: var .

    $default  reduce using rule 73 (term)


State 77

   39 do: DO BEGINLOOP .

    $default  reduce using rule 39 (do)


State 78

   79 var: IDENT .
   80    | IDENT . L_SQUARE_BRACKET expressions R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 102

    $default  reduce using rule 79 (var)


State 79

   40 st6: READ readVars .

    $default  reduce using rule 40 (st6)


State 80

   42 readVars: var .
   43         | var . COMMA readVars

    COMMA  shift, and go to state 117

    $default  reduce using rule 42 (readVars)


State 81

   41 st7: WRITE writeVars .

    $default  reduce using rule 41 (st7)


State 82

   44 writeVars: var .
   45          | var . COMMA readVars

    COMMA  shift, and go to state 118

    $default  reduce using rule 44 (writeVars)


State 83

   76 term: L_PAREN . expression R_PAREN

    SUB      shift, and go to state 65
    L_PAREN  shift, and go to state 83
    NUMBER   shift, and go to state 67
    IDENT    shift, and go to state 68

    expression       go to state 119
    mult_expression  go to state 74
    term             go to state 75
    var              go to state 76


State 84

   47 st9: RETURN expression .

    $default  reduce using rule 47 (st9)


State 85

   29 assign_variable: IDENT L_SQUARE_BRACKET . expressions R_SQUARE_BRACKET

    SUB      shift, and go to state 65
    L_PAREN  shift, and go to state 83
    NUMBER   shift, and go to state 67
    IDENT    shift, and go to state 68

    expressions      go to state 120
    expression       go to state 121
    mult_expression  go to state 74
    term             go to state 75
    var              go to state 76


State 86

    7 function: function_ident SEMICOLON begin_params declarations end_params BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 7 (function)


State 87

   16 statements: statement SEMICOLON . statements
   17           | statement SEMICOLON .

    IF        shift, and go to state 35
    WHILE     shift, and go to state 36
    DO        shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    RETURN    shift, and go to state 41
    IDENT     shift, and go to state 42

    $default  reduce using rule 17 (statements)

    statements       go to state 122
    statement        go to state 44
    st1              go to state 45
    assign_variable  go to state 46
    st2              go to state 47
    st3              go to state 48
    if_bool          go to state 49
    st4              go to state 50
    st5              go to state 51
    while_bool       go to state 52
    while            go to state 53
    do_loop          go to state 54
    do               go to state 55
    st6              go to state 56
    st7              go to state 57
    st8              go to state 58
    st9              go to state 59


State 88

   27 st1: assign_variable ASSIGN . expression

    SUB      shift, and go to state 65
    L_PAREN  shift, and go to state 83
    NUMBER   shift, and go to state 67
    IDENT    shift, and go to state 68

    expression       go to state 123
    mult_expression  go to state 74
    term             go to state 75
    var              go to state 76


State 89

   30 st2: if_bool THEN . statements ENDIF
   31 st3: if_bool THEN . statements if_else ENDIF

    IF        shift, and go to state 35
    WHILE     shift, and go to state 36
    DO        shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    RETURN    shift, and go to state 41
    IDENT     shift, and go to state 42

    statements       go to state 124
    statement        go to state 44
    st1              go to state 45
    assign_variable  go to state 46
    st2              go to state 47
    st3              go to state 48
    if_bool          go to state 49
    st4              go to state 50
    st5              go to state 51
    while_bool       go to state 52
    while            go to state 53
    do_loop          go to state 54
    do               go to state 55
    st6              go to state 56
    st7              go to state 57
    st8              go to state 58
    st9              go to state 59


State 90

   34 st4: while_bool statements . ENDLOOP

    ENDLOOP  shift, and go to state 125


State 91

   36 while_bool: while bool_exp . BEGINLOOP

    BEGINLOOP  shift, and go to state 126


State 92

   35 st5: do_loop WHILE . bool_exp

    NOT      shift, and go to state 62
    TRUE     shift, and go to state 63
    FALSE    shift, and go to state 64
    SUB      shift, and go to state 65
    L_PAREN  shift, and go to state 66
    NUMBER   shift, and go to state 67
    IDENT    shift, and go to state 68

    bool_exp          go to state 127
    relation_and_exp  go to state 70
    relation_exp      go to state 71
    rexp              go to state 72
    expression        go to state 73
    mult_expression   go to state 74
    term              go to state 75
    var               go to state 76


State 93

   38 do_loop: do statements . ENDLOOP

    ENDLOOP  shift, and go to state 128


State 94

   13 assign_dec: ARRAY L_SQUARE_BRACKET SUB NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 129


State 95

   12 assign_dec: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 12 (assign_dec)


State 96

   53 relation_exp: NOT rexp .

    $default  reduce using rule 53 (relation_exp)


State 97

   77 term: SUB L_PAREN . expression R_PAREN

    SUB      shift, and go to state 65
    L_PAREN  shift, and go to state 83
    NUMBER   shift, and go to state 67
    IDENT    shift, and go to state 68

    expression       go to state 130
    mult_expression  go to state 74
    term             go to state 75
    var              go to state 76


State 98

   75 term: SUB NUMBER .

    $default  reduce using rule 75 (term)


State 99

   57 rexp: L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 131


State 100

   54 rexp: expression . comp expression
   76 term: L_PAREN expression . R_PAREN

    EQ       shift, and go to state 105
    NEQ      shift, and go to state 106
    LT       shift, and go to state 107
    GT       shift, and go to state 108
    LTE      shift, and go to state 109
    GTE      shift, and go to state 110
    R_PAREN  shift, and go to state 132

    comp  go to state 111


State 101

   78 term: IDENT L_PAREN . expressions R_PAREN

    SUB      shift, and go to state 65
    L_PAREN  shift, and go to state 83
    NUMBER   shift, and go to state 67
    IDENT    shift, and go to state 68

    expressions      go to state 133
    expression       go to state 121
    mult_expression  go to state 74
    term             go to state 75
    var              go to state 76


State 102

   80 var: IDENT L_SQUARE_BRACKET . expressions R_SQUARE_BRACKET

    SUB      shift, and go to state 65
    L_PAREN  shift, and go to state 83
    NUMBER   shift, and go to state 67
    IDENT    shift, and go to state 68

    expressions      go to state 134
    expression       go to state 121
    mult_expression  go to state 74
    term             go to state 75
    var              go to state 76


State 103

   49 bool_exp: relation_and_exp OR . bool_exp

    NOT      shift, and go to state 62
    TRUE     shift, and go to state 63
    FALSE    shift, and go to state 64
    SUB      shift, and go to state 65
    L_PAREN  shift, and go to state 66
    NUMBER   shift, and go to state 67
    IDENT    shift, and go to state 68

    bool_exp          go to state 135
    relation_and_exp  go to state 70
    relation_exp      go to state 71
    rexp              go to state 72
    expression        go to state 73
    mult_expression   go to state 74
    term              go to state 75
    var               go to state 76


State 104

   51 relation_and_exp: relation_exp AND . relation_and_exp

    NOT      shift, and go to state 62
    TRUE     shift, and go to state 63
    FALSE    shift, and go to state 64
    SUB      shift, and go to state 65
    L_PAREN  shift, and go to state 66
    NUMBER   shift, and go to state 67
    IDENT    shift, and go to state 68

    relation_and_exp  go to state 136
    relation_exp      go to state 71
    rexp              go to state 72
    expression        go to state 73
    mult_expression   go to state 74
    term              go to state 75
    var               go to state 76


State 105

   58 comp: EQ .

    $default  reduce using rule 58 (comp)


State 106

   59 comp: NEQ .

    $default  reduce using rule 59 (comp)


State 107

   60 comp: LT .

    $default  reduce using rule 60 (comp)


State 108

   61 comp: GT .

    $default  reduce using rule 61 (comp)


State 109

   62 comp: LTE .

    $default  reduce using rule 62 (comp)


State 110

   63 comp: GTE .

    $default  reduce using rule 63 (comp)


State 111

   54 rexp: expression comp . expression

    SUB      shift, and go to state 65
    L_PAREN  shift, and go to state 83
    NUMBER   shift, and go to state 67
    IDENT    shift, and go to state 68

    expression       go to state 137
    mult_expression  go to state 74
    term             go to state 75
    var              go to state 76


State 112

   68 expression: mult_expression SUB . expression

    SUB      shift, and go to state 65
    L_PAREN  shift, and go to state 83
    NUMBER   shift, and go to state 67
    IDENT    shift, and go to state 68

    expression       go to state 138
    mult_expression  go to state 74
    term             go to state 75
    var              go to state 76


State 113

   67 expression: mult_expression ADD . expression

    SUB      shift, and go to state 65
    L_PAREN  shift, and go to state 83
    NUMBER   shift, and go to state 67
    IDENT    shift, and go to state 68

    expression       go to state 139
    mult_expression  go to state 74
    term             go to state 75
    var              go to state 76


State 114

   70 mult_expression: term MULT . mult_expression

    SUB      shift, and go to state 65
    L_PAREN  shift, and go to state 83
    NUMBER   shift, and go to state 67
    IDENT    shift, and go to state 68

    mult_expression  go to state 140
    term             go to state 75
    var              go to state 76


State 115

   71 mult_expression: term DIV . mult_expression

    SUB      shift, and go to state 65
    L_PAREN  shift, and go to state 83
    NUMBER   shift, and go to state 67
    IDENT    shift, and go to state 68

    mult_expression  go to state 141
    term             go to state 75
    var              go to state 76


State 116

   72 mult_expression: term MOD . mult_expression

    SUB      shift, and go to state 65
    L_PAREN  shift, and go to state 83
    NUMBER   shift, and go to state 67
    IDENT    shift, and go to state 68

    mult_expression  go to state 142
    term             go to state 75
    var              go to state 76


State 117

   43 readVars: var COMMA . readVars

    IDENT  shift, and go to state 78

    readVars  go to state 143
    var       go to state 80


State 118

   45 writeVars: var COMMA . readVars

    IDENT  shift, and go to state 78

    readVars  go to state 144
    var       go to state 80


State 119

   76 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 132


State 120

   29 assign_variable: IDENT L_SQUARE_BRACKET expressions . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 145


State 121

   64 expressions: expression .
   65            | expression . COMMA expression

    COMMA  shift, and go to state 146

    $default  reduce using rule 64 (expressions)


State 122

   16 statements: statement SEMICOLON statements .

    $default  reduce using rule 16 (statements)


State 123

   27 st1: assign_variable ASSIGN expression .

    $default  reduce using rule 27 (st1)


State 124

   30 st2: if_bool THEN statements . ENDIF
   31 st3: if_bool THEN statements . if_else ENDIF

    ENDIF  shift, and go to state 147
    ELSE   shift, and go to state 148

    if_else  go to state 149


State 125

   34 st4: while_bool statements ENDLOOP .

    $default  reduce using rule 34 (st4)


State 126

   36 while_bool: while bool_exp BEGINLOOP .

    $default  reduce using rule 36 (while_bool)


State 127

   35 st5: do_loop WHILE bool_exp .

    $default  reduce using rule 35 (st5)


State 128

   38 do_loop: do statements ENDLOOP .

    $default  reduce using rule 38 (do_loop)


State 129

   13 assign_dec: ARRAY L_SQUARE_BRACKET SUB NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 13 (assign_dec)


State 130

   77 term: SUB L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 150


State 131

   57 rexp: L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 57 (rexp)


State 132

   76 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 76 (term)


State 133

   78 term: IDENT L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 151


State 134

   80 var: IDENT L_SQUARE_BRACKET expressions . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 152


State 135

   49 bool_exp: relation_and_exp OR bool_exp .

    $default  reduce using rule 49 (bool_exp)


State 136

   51 relation_and_exp: relation_exp AND relation_and_exp .

    $default  reduce using rule 51 (relation_and_exp)


State 137

   54 rexp: expression comp expression .

    $default  reduce using rule 54 (rexp)


State 138

   68 expression: mult_expression SUB expression .

    $default  reduce using rule 68 (expression)


State 139

   67 expression: mult_expression ADD expression .

    $default  reduce using rule 67 (expression)


State 140

   70 mult_expression: term MULT mult_expression .

    $default  reduce using rule 70 (mult_expression)


State 141

   71 mult_expression: term DIV mult_expression .

    $default  reduce using rule 71 (mult_expression)


State 142

   72 mult_expression: term MOD mult_expression .

    $default  reduce using rule 72 (mult_expression)


State 143

   43 readVars: var COMMA readVars .

    $default  reduce using rule 43 (readVars)


State 144

   45 writeVars: var COMMA readVars .

    $default  reduce using rule 45 (writeVars)


State 145

   29 assign_variable: IDENT L_SQUARE_BRACKET expressions R_SQUARE_BRACKET .

    $default  reduce using rule 29 (assign_variable)


State 146

   65 expressions: expression COMMA . expression

    SUB      shift, and go to state 65
    L_PAREN  shift, and go to state 83
    NUMBER   shift, and go to state 67
    IDENT    shift, and go to state 68

    expression       go to state 153
    mult_expression  go to state 74
    term             go to state 75
    var              go to state 76


State 147

   30 st2: if_bool THEN statements ENDIF .

    $default  reduce using rule 30 (st2)


State 148

   33 if_else: ELSE . statements

    IF        shift, and go to state 35
    WHILE     shift, and go to state 36
    DO        shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    RETURN    shift, and go to state 41
    IDENT     shift, and go to state 42

    statements       go to state 154
    statement        go to state 44
    st1              go to state 45
    assign_variable  go to state 46
    st2              go to state 47
    st3              go to state 48
    if_bool          go to state 49
    st4              go to state 50
    st5              go to state 51
    while_bool       go to state 52
    while            go to state 53
    do_loop          go to state 54
    do               go to state 55
    st6              go to state 56
    st7              go to state 57
    st8              go to state 58
    st9              go to state 59


State 149

   31 st3: if_bool THEN statements if_else . ENDIF

    ENDIF  shift, and go to state 155


State 150

   77 term: SUB L_PAREN expression R_PAREN .

    $default  reduce using rule 77 (term)


State 151

   78 term: IDENT L_PAREN expressions R_PAREN .

    $default  reduce using rule 78 (term)


State 152

   80 var: IDENT L_SQUARE_BRACKET expressions R_SQUARE_BRACKET .

    $default  reduce using rule 80 (var)


State 153

   65 expressions: expression COMMA expression .

    $default  reduce using rule 65 (expressions)


State 154

   33 if_else: ELSE statements .

    $default  reduce using rule 33 (if_else)


State 155

   31 st3: if_bool THEN statements if_else ENDIF .

    $default  reduce using rule 31 (st3)
