Terminals unused in grammar

   UMINUS


Grammar

    0 $accept: prog_start $end

    1 prog_start: functions

    2 functions: function functions
    3          | %empty

    4 function_ident: FUNCTION IDENT

    5 begin_params: BEGIN_PARAMS

    6 end_params: END_PARAMS

    7 function: function_ident SEMICOLON begin_params declarations end_params print_params BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    8 print_params: %empty

    9 declarations: declaration SEMICOLON declarations
   10             | %empty

   11 declaration: identifiers COLON assign_dec

   12 assign_dec: INTEGER
   13           | ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   14           | ARRAY L_SQUARE_BRACKET SUB NUMBER R_SQUARE_BRACKET OF INTEGER

   15 identifiers: IDENT
   16            | IDENT COMMA identifiers

   17 statements: statement SEMICOLON statements
   18           | statement SEMICOLON

   19 statement: st1
   20          | st2
   21          | st3
   22          | st4
   23          | st5
   24          | st6
   25          | st7
   26          | st8
   27          | st9

   28 st1: assign_variable ASSIGN expression

   29 assign_variable: IDENT
   30                | IDENT L_SQUARE_BRACKET expressions R_SQUARE_BRACKET

   31 st2: if_bool THEN statements ENDIF

   32 st3: if_bool THEN statements if_else ENDIF

   33 if_bool: IF bool_exp

   34 if_else: ELSE statements

   35 st4: while_bool statements ENDLOOP

   36 st5: do_loop WHILE bool_exp

   37 while_bool: while bool_exp BEGINLOOP

   38 while: WHILE

   39 do_loop: do statements ENDLOOP

   40 do: DO BEGINLOOP

   41 st6: READ readVars

   42 st7: WRITE writeVars

   43 readVars: var
   44         | var COMMA readVars

   45 writeVars: var
   46          | var COMMA readVars

   47 st8: CONTINUE

   48 st9: RETURN expression

   49 bool_exp: relation_and_exp
   50         | relation_and_exp OR bool_exp

   51 relation_and_exp: relation_exp
   52                 | relation_exp AND relation_and_exp

   53 relation_exp: rexp
   54             | NOT rexp

   55 rexp: expression comp expression
   56     | TRUE
   57     | FALSE
   58     | L_PAREN bool_exp R_PAREN

   59 comp: EQ
   60     | NEQ
   61     | LT
   62     | GT
   63     | LTE
   64     | GTE

   65 expressions: expression
   66            | expression COMMA expression

   67 expression: mult_expression
   68           | mult_expression ADD expression
   69           | mult_expression SUB expression

   70 mult_expression: term
   71                | term MULT mult_expression
   72                | term DIV mult_expression
   73                | term MOD mult_expression

   74 term: var
   75     | NUMBER
   76     | SUB NUMBER
   77     | L_PAREN expression R_PAREN
   78     | SUB L_PAREN expression R_PAREN
   79     | IDENT L_PAREN expressions R_PAREN

   80 var: IDENT
   81    | IDENT L_SQUARE_BRACKET expressions R_SQUARE_BRACKET


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 4
BEGIN_PARAMS (259) 5
END_PARAMS (260) 6
BEGIN_LOCALS (261) 7
END_LOCALS (262) 7
BEGIN_BODY (263) 7
END_BODY (264) 7
INTEGER (265) 12 13 14
ARRAY (266) 13 14
OF (267) 13 14
IF (268) 33
THEN (269) 31 32
ENDIF (270) 31 32
ELSE (271) 34
WHILE (272) 36 38
DO (273) 40
BEGINLOOP (274) 37 40
ENDLOOP (275) 35 39
CONTINUE (276) 47
READ (277) 41
WRITE (278) 42
AND (279) 52
OR (280) 50
NOT (281) 54
TRUE (282) 56
FALSE (283) 57
RETURN (284) 48
SUB (285) 14 69 76 78
ADD (286) 68
MULT (287) 71
DIV (288) 72
MOD (289) 73
EQ (290) 59
NEQ (291) 60
LT (292) 61
GT (293) 62
LTE (294) 63
GTE (295) 64
SEMICOLON (296) 7 9 17 18
COLON (297) 11
COMMA (298) 16 44 46 66
L_PAREN (299) 58 77 78 79
R_PAREN (300) 58 77 78 79
L_SQUARE_BRACKET (301) 13 14 30 81
R_SQUARE_BRACKET (302) 13 14 30 81
ASSIGN (303) 28
NUMBER (304) 13 14 75 76
IDENT (305) 4 15 16 29 30 79 80 81
UMINUS (306)


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
prog_start (53)
    on left: 1, on right: 0
functions (54)
    on left: 2 3, on right: 1 2
function_ident (55)
    on left: 4, on right: 7
begin_params (56)
    on left: 5, on right: 7
end_params (57)
    on left: 6, on right: 7
function (58)
    on left: 7, on right: 2
print_params (59)
    on left: 8, on right: 7
declarations (60)
    on left: 9 10, on right: 7 9
declaration (61)
    on left: 11, on right: 9
assign_dec (62)
    on left: 12 13 14, on right: 11
identifiers (63)
    on left: 15 16, on right: 11 16
statements (64)
    on left: 17 18, on right: 7 17 31 32 34 35 39
statement (65)
    on left: 19 20 21 22 23 24 25 26 27, on right: 17 18
st1 (66)
    on left: 28, on right: 19
assign_variable (67)
    on left: 29 30, on right: 28
st2 (68)
    on left: 31, on right: 20
st3 (69)
    on left: 32, on right: 21
if_bool (70)
    on left: 33, on right: 31 32
if_else (71)
    on left: 34, on right: 32
st4 (72)
    on left: 35, on right: 22
st5 (73)
    on left: 36, on right: 23
while_bool (74)
    on left: 37, on right: 35
while (75)
    on left: 38, on right: 37
do_loop (76)
    on left: 39, on right: 36
do (77)
    on left: 40, on right: 39
st6 (78)
    on left: 41, on right: 24
st7 (79)
    on left: 42, on right: 25
readVars (80)
    on left: 43 44, on right: 41 44 46
writeVars (81)
    on left: 45 46, on right: 42
st8 (82)
    on left: 47, on right: 26
st9 (83)
    on left: 48, on right: 27
bool_exp (84)
    on left: 49 50, on right: 33 36 37 50 58
relation_and_exp (85)
    on left: 51 52, on right: 49 50 52
relation_exp (86)
    on left: 53 54, on right: 51 52
rexp (87)
    on left: 55 56 57 58, on right: 53 54
comp (88)
    on left: 59 60 61 62 63 64, on right: 55
expressions (89)
    on left: 65 66, on right: 30 79 81
expression (90)
    on left: 67 68 69, on right: 28 48 55 65 66 68 69 77 78
mult_expression (91)
    on left: 70 71 72 73, on right: 67 68 69 71 72 73
term (92)
    on left: 74 75 76 77 78 79, on right: 70 71 72 73
var (93)
    on left: 80 81, on right: 43 44 45 46 74


State 0

    0 $accept: . prog_start $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (functions)

    prog_start      go to state 2
    functions       go to state 3
    function_ident  go to state 4
    function        go to state 5


State 1

    4 function_ident: FUNCTION . IDENT

    IDENT  shift, and go to state 6


State 2

    0 $accept: prog_start . $end

    $end  shift, and go to state 7


State 3

    1 prog_start: functions .

    $default  reduce using rule 1 (prog_start)


State 4

    7 function: function_ident . SEMICOLON begin_params declarations end_params print_params BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 8


State 5

    2 functions: function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (functions)

    functions       go to state 9
    function_ident  go to state 4
    function        go to state 5


State 6

    4 function_ident: FUNCTION IDENT .

    $default  reduce using rule 4 (function_ident)


State 7

    0 $accept: prog_start $end .

    $default  accept


State 8

    7 function: function_ident SEMICOLON . begin_params declarations end_params print_params BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 10

    begin_params  go to state 11


State 9

    2 functions: function functions .

    $default  reduce using rule 2 (functions)


State 10

    5 begin_params: BEGIN_PARAMS .

    $default  reduce using rule 5 (begin_params)


State 11

    7 function: function_ident SEMICOLON begin_params . declarations end_params print_params BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 12

    $default  reduce using rule 10 (declarations)

    declarations  go to state 13
    declaration   go to state 14
    identifiers   go to state 15


State 12

   15 identifiers: IDENT .
   16            | IDENT . COMMA identifiers

    COMMA  shift, and go to state 16

    $default  reduce using rule 15 (identifiers)


State 13

    7 function: function_ident SEMICOLON begin_params declarations . end_params print_params BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 17

    end_params  go to state 18


State 14

    9 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 19


State 15

   11 declaration: identifiers . COLON assign_dec

    COLON  shift, and go to state 20


State 16

   16 identifiers: IDENT COMMA . identifiers

    IDENT  shift, and go to state 12

    identifiers  go to state 21


State 17

    6 end_params: END_PARAMS .

    $default  reduce using rule 6 (end_params)


State 18

    7 function: function_ident SEMICOLON begin_params declarations end_params . print_params BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    $default  reduce using rule 8 (print_params)

    print_params  go to state 22


State 19

    9 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 12

    $default  reduce using rule 10 (declarations)

    declarations  go to state 23
    declaration   go to state 14
    identifiers   go to state 15


State 20

   11 declaration: identifiers COLON . assign_dec

    INTEGER  shift, and go to state 24
    ARRAY    shift, and go to state 25

    assign_dec  go to state 26


State 21

   16 identifiers: IDENT COMMA identifiers .

    $default  reduce using rule 16 (identifiers)


State 22

    7 function: function_ident SEMICOLON begin_params declarations end_params print_params . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 27


State 23

    9 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 9 (declarations)


State 24

   12 assign_dec: INTEGER .

    $default  reduce using rule 12 (assign_dec)


State 25

   13 assign_dec: ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   14           | ARRAY . L_SQUARE_BRACKET SUB NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 28


State 26

   11 declaration: identifiers COLON assign_dec .

    $default  reduce using rule 11 (declaration)


State 27

    7 function: function_ident SEMICOLON begin_params declarations end_params print_params BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 12

    $default  reduce using rule 10 (declarations)

    declarations  go to state 29
    declaration   go to state 14
    identifiers   go to state 15


State 28

   13 assign_dec: ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER
   14           | ARRAY L_SQUARE_BRACKET . SUB NUMBER R_SQUARE_BRACKET OF INTEGER

    SUB     shift, and go to state 30
    NUMBER  shift, and go to state 31


State 29

    7 function: function_ident SEMICOLON begin_params declarations end_params print_params BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 32


State 30

   14 assign_dec: ARRAY L_SQUARE_BRACKET SUB . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 33


State 31

   13 assign_dec: ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 34


State 32

    7 function: function_ident SEMICOLON begin_params declarations end_params print_params BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 35


State 33

   14 assign_dec: ARRAY L_SQUARE_BRACKET SUB NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 36


State 34

   13 assign_dec: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 37


State 35

    7 function: function_ident SEMICOLON begin_params declarations end_params print_params BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    IF        shift, and go to state 38
    WHILE     shift, and go to state 39
    DO        shift, and go to state 40
    CONTINUE  shift, and go to state 41
    READ      shift, and go to state 42
    WRITE     shift, and go to state 43
    RETURN    shift, and go to state 44
    IDENT     shift, and go to state 45

    statements       go to state 46
    statement        go to state 47
    st1              go to state 48
    assign_variable  go to state 49
    st2              go to state 50
    st3              go to state 51
    if_bool          go to state 52
    st4              go to state 53
    st5              go to state 54
    while_bool       go to state 55
    while            go to state 56
    do_loop          go to state 57
    do               go to state 58
    st6              go to state 59
    st7              go to state 60
    st8              go to state 61
    st9              go to state 62


State 36

   14 assign_dec: ARRAY L_SQUARE_BRACKET SUB NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 63


State 37

   13 assign_dec: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 64


State 38

   33 if_bool: IF . bool_exp

    NOT      shift, and go to state 65
    TRUE     shift, and go to state 66
    FALSE    shift, and go to state 67
    SUB      shift, and go to state 68
    L_PAREN  shift, and go to state 69
    NUMBER   shift, and go to state 70
    IDENT    shift, and go to state 71

    bool_exp          go to state 72
    relation_and_exp  go to state 73
    relation_exp      go to state 74
    rexp              go to state 75
    expression        go to state 76
    mult_expression   go to state 77
    term              go to state 78
    var               go to state 79


State 39

   38 while: WHILE .

    $default  reduce using rule 38 (while)


State 40

   40 do: DO . BEGINLOOP

    BEGINLOOP  shift, and go to state 80


State 41

   47 st8: CONTINUE .

    $default  reduce using rule 47 (st8)


State 42

   41 st6: READ . readVars

    IDENT  shift, and go to state 81

    readVars  go to state 82
    var       go to state 83


State 43

   42 st7: WRITE . writeVars

    IDENT  shift, and go to state 81

    writeVars  go to state 84
    var        go to state 85


State 44

   48 st9: RETURN . expression

    SUB      shift, and go to state 68
    L_PAREN  shift, and go to state 86
    NUMBER   shift, and go to state 70
    IDENT    shift, and go to state 71

    expression       go to state 87
    mult_expression  go to state 77
    term             go to state 78
    var              go to state 79


State 45

   29 assign_variable: IDENT .
   30                | IDENT . L_SQUARE_BRACKET expressions R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 88

    $default  reduce using rule 29 (assign_variable)


State 46

    7 function: function_ident SEMICOLON begin_params declarations end_params print_params BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 89


State 47

   17 statements: statement . SEMICOLON statements
   18           | statement . SEMICOLON

    SEMICOLON  shift, and go to state 90


State 48

   19 statement: st1 .

    $default  reduce using rule 19 (statement)


State 49

   28 st1: assign_variable . ASSIGN expression

    ASSIGN  shift, and go to state 91


State 50

   20 statement: st2 .

    $default  reduce using rule 20 (statement)


State 51

   21 statement: st3 .

    $default  reduce using rule 21 (statement)


State 52

   31 st2: if_bool . THEN statements ENDIF
   32 st3: if_bool . THEN statements if_else ENDIF

    THEN  shift, and go to state 92


State 53

   22 statement: st4 .

    $default  reduce using rule 22 (statement)


State 54

   23 statement: st5 .

    $default  reduce using rule 23 (statement)


State 55

   35 st4: while_bool . statements ENDLOOP

    IF        shift, and go to state 38
    WHILE     shift, and go to state 39
    DO        shift, and go to state 40
    CONTINUE  shift, and go to state 41
    READ      shift, and go to state 42
    WRITE     shift, and go to state 43
    RETURN    shift, and go to state 44
    IDENT     shift, and go to state 45

    statements       go to state 93
    statement        go to state 47
    st1              go to state 48
    assign_variable  go to state 49
    st2              go to state 50
    st3              go to state 51
    if_bool          go to state 52
    st4              go to state 53
    st5              go to state 54
    while_bool       go to state 55
    while            go to state 56
    do_loop          go to state 57
    do               go to state 58
    st6              go to state 59
    st7              go to state 60
    st8              go to state 61
    st9              go to state 62


State 56

   37 while_bool: while . bool_exp BEGINLOOP

    NOT      shift, and go to state 65
    TRUE     shift, and go to state 66
    FALSE    shift, and go to state 67
    SUB      shift, and go to state 68
    L_PAREN  shift, and go to state 69
    NUMBER   shift, and go to state 70
    IDENT    shift, and go to state 71

    bool_exp          go to state 94
    relation_and_exp  go to state 73
    relation_exp      go to state 74
    rexp              go to state 75
    expression        go to state 76
    mult_expression   go to state 77
    term              go to state 78
    var               go to state 79


State 57

   36 st5: do_loop . WHILE bool_exp

    WHILE  shift, and go to state 95


State 58

   39 do_loop: do . statements ENDLOOP

    IF        shift, and go to state 38
    WHILE     shift, and go to state 39
    DO        shift, and go to state 40
    CONTINUE  shift, and go to state 41
    READ      shift, and go to state 42
    WRITE     shift, and go to state 43
    RETURN    shift, and go to state 44
    IDENT     shift, and go to state 45

    statements       go to state 96
    statement        go to state 47
    st1              go to state 48
    assign_variable  go to state 49
    st2              go to state 50
    st3              go to state 51
    if_bool          go to state 52
    st4              go to state 53
    st5              go to state 54
    while_bool       go to state 55
    while            go to state 56
    do_loop          go to state 57
    do               go to state 58
    st6              go to state 59
    st7              go to state 60
    st8              go to state 61
    st9              go to state 62


State 59

   24 statement: st6 .

    $default  reduce using rule 24 (statement)


State 60

   25 statement: st7 .

    $default  reduce using rule 25 (statement)


State 61

   26 statement: st8 .

    $default  reduce using rule 26 (statement)


State 62

   27 statement: st9 .

    $default  reduce using rule 27 (statement)


State 63

   14 assign_dec: ARRAY L_SQUARE_BRACKET SUB NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 97


State 64

   13 assign_dec: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 13 (assign_dec)


State 65

   54 relation_exp: NOT . rexp

    TRUE     shift, and go to state 66
    FALSE    shift, and go to state 67
    SUB      shift, and go to state 68
    L_PAREN  shift, and go to state 69
    NUMBER   shift, and go to state 70
    IDENT    shift, and go to state 71

    rexp             go to state 98
    expression       go to state 76
    mult_expression  go to state 77
    term             go to state 78
    var              go to state 79


State 66

   56 rexp: TRUE .

    $default  reduce using rule 56 (rexp)


State 67

   57 rexp: FALSE .

    $default  reduce using rule 57 (rexp)


State 68

   76 term: SUB . NUMBER
   78     | SUB . L_PAREN expression R_PAREN

    L_PAREN  shift, and go to state 99
    NUMBER   shift, and go to state 100


State 69

   58 rexp: L_PAREN . bool_exp R_PAREN
   77 term: L_PAREN . expression R_PAREN

    NOT      shift, and go to state 65
    TRUE     shift, and go to state 66
    FALSE    shift, and go to state 67
    SUB      shift, and go to state 68
    L_PAREN  shift, and go to state 69
    NUMBER   shift, and go to state 70
    IDENT    shift, and go to state 71

    bool_exp          go to state 101
    relation_and_exp  go to state 73
    relation_exp      go to state 74
    rexp              go to state 75
    expression        go to state 102
    mult_expression   go to state 77
    term              go to state 78
    var               go to state 79


State 70

   75 term: NUMBER .

    $default  reduce using rule 75 (term)


State 71

   79 term: IDENT . L_PAREN expressions R_PAREN
   80 var: IDENT .
   81    | IDENT . L_SQUARE_BRACKET expressions R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 103
    L_SQUARE_BRACKET  shift, and go to state 104

    $default  reduce using rule 80 (var)


State 72

   33 if_bool: IF bool_exp .

    $default  reduce using rule 33 (if_bool)


State 73

   49 bool_exp: relation_and_exp .
   50         | relation_and_exp . OR bool_exp

    OR  shift, and go to state 105

    $default  reduce using rule 49 (bool_exp)


State 74

   51 relation_and_exp: relation_exp .
   52                 | relation_exp . AND relation_and_exp

    AND  shift, and go to state 106

    $default  reduce using rule 51 (relation_and_exp)


State 75

   53 relation_exp: rexp .

    $default  reduce using rule 53 (relation_exp)


State 76

   55 rexp: expression . comp expression

    EQ   shift, and go to state 107
    NEQ  shift, and go to state 108
    LT   shift, and go to state 109
    GT   shift, and go to state 110
    LTE  shift, and go to state 111
    GTE  shift, and go to state 112

    comp  go to state 113


State 77

   67 expression: mult_expression .
   68           | mult_expression . ADD expression
   69           | mult_expression . SUB expression

    SUB  shift, and go to state 114
    ADD  shift, and go to state 115

    $default  reduce using rule 67 (expression)


State 78

   70 mult_expression: term .
   71                | term . MULT mult_expression
   72                | term . DIV mult_expression
   73                | term . MOD mult_expression

    MULT  shift, and go to state 116
    DIV   shift, and go to state 117
    MOD   shift, and go to state 118

    $default  reduce using rule 70 (mult_expression)


State 79

   74 term: var .

    $default  reduce using rule 74 (term)


State 80

   40 do: DO BEGINLOOP .

    $default  reduce using rule 40 (do)


State 81

   80 var: IDENT .
   81    | IDENT . L_SQUARE_BRACKET expressions R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 104

    $default  reduce using rule 80 (var)


State 82

   41 st6: READ readVars .

    $default  reduce using rule 41 (st6)


State 83

   43 readVars: var .
   44         | var . COMMA readVars

    COMMA  shift, and go to state 119

    $default  reduce using rule 43 (readVars)


State 84

   42 st7: WRITE writeVars .

    $default  reduce using rule 42 (st7)


State 85

   45 writeVars: var .
   46          | var . COMMA readVars

    COMMA  shift, and go to state 120

    $default  reduce using rule 45 (writeVars)


State 86

   77 term: L_PAREN . expression R_PAREN

    SUB      shift, and go to state 68
    L_PAREN  shift, and go to state 86
    NUMBER   shift, and go to state 70
    IDENT    shift, and go to state 71

    expression       go to state 121
    mult_expression  go to state 77
    term             go to state 78
    var              go to state 79


State 87

   48 st9: RETURN expression .

    $default  reduce using rule 48 (st9)


State 88

   30 assign_variable: IDENT L_SQUARE_BRACKET . expressions R_SQUARE_BRACKET

    SUB      shift, and go to state 68
    L_PAREN  shift, and go to state 86
    NUMBER   shift, and go to state 70
    IDENT    shift, and go to state 71

    expressions      go to state 122
    expression       go to state 123
    mult_expression  go to state 77
    term             go to state 78
    var              go to state 79


State 89

    7 function: function_ident SEMICOLON begin_params declarations end_params print_params BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 7 (function)


State 90

   17 statements: statement SEMICOLON . statements
   18           | statement SEMICOLON .

    IF        shift, and go to state 38
    WHILE     shift, and go to state 39
    DO        shift, and go to state 40
    CONTINUE  shift, and go to state 41
    READ      shift, and go to state 42
    WRITE     shift, and go to state 43
    RETURN    shift, and go to state 44
    IDENT     shift, and go to state 45

    $default  reduce using rule 18 (statements)

    statements       go to state 124
    statement        go to state 47
    st1              go to state 48
    assign_variable  go to state 49
    st2              go to state 50
    st3              go to state 51
    if_bool          go to state 52
    st4              go to state 53
    st5              go to state 54
    while_bool       go to state 55
    while            go to state 56
    do_loop          go to state 57
    do               go to state 58
    st6              go to state 59
    st7              go to state 60
    st8              go to state 61
    st9              go to state 62


State 91

   28 st1: assign_variable ASSIGN . expression

    SUB      shift, and go to state 68
    L_PAREN  shift, and go to state 86
    NUMBER   shift, and go to state 70
    IDENT    shift, and go to state 71

    expression       go to state 125
    mult_expression  go to state 77
    term             go to state 78
    var              go to state 79


State 92

   31 st2: if_bool THEN . statements ENDIF
   32 st3: if_bool THEN . statements if_else ENDIF

    IF        shift, and go to state 38
    WHILE     shift, and go to state 39
    DO        shift, and go to state 40
    CONTINUE  shift, and go to state 41
    READ      shift, and go to state 42
    WRITE     shift, and go to state 43
    RETURN    shift, and go to state 44
    IDENT     shift, and go to state 45

    statements       go to state 126
    statement        go to state 47
    st1              go to state 48
    assign_variable  go to state 49
    st2              go to state 50
    st3              go to state 51
    if_bool          go to state 52
    st4              go to state 53
    st5              go to state 54
    while_bool       go to state 55
    while            go to state 56
    do_loop          go to state 57
    do               go to state 58
    st6              go to state 59
    st7              go to state 60
    st8              go to state 61
    st9              go to state 62


State 93

   35 st4: while_bool statements . ENDLOOP

    ENDLOOP  shift, and go to state 127


State 94

   37 while_bool: while bool_exp . BEGINLOOP

    BEGINLOOP  shift, and go to state 128


State 95

   36 st5: do_loop WHILE . bool_exp

    NOT      shift, and go to state 65
    TRUE     shift, and go to state 66
    FALSE    shift, and go to state 67
    SUB      shift, and go to state 68
    L_PAREN  shift, and go to state 69
    NUMBER   shift, and go to state 70
    IDENT    shift, and go to state 71

    bool_exp          go to state 129
    relation_and_exp  go to state 73
    relation_exp      go to state 74
    rexp              go to state 75
    expression        go to state 76
    mult_expression   go to state 77
    term              go to state 78
    var               go to state 79


State 96

   39 do_loop: do statements . ENDLOOP

    ENDLOOP  shift, and go to state 130


State 97

   14 assign_dec: ARRAY L_SQUARE_BRACKET SUB NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 14 (assign_dec)


State 98

   54 relation_exp: NOT rexp .

    $default  reduce using rule 54 (relation_exp)


State 99

   78 term: SUB L_PAREN . expression R_PAREN

    SUB      shift, and go to state 68
    L_PAREN  shift, and go to state 86
    NUMBER   shift, and go to state 70
    IDENT    shift, and go to state 71

    expression       go to state 131
    mult_expression  go to state 77
    term             go to state 78
    var              go to state 79


State 100

   76 term: SUB NUMBER .

    $default  reduce using rule 76 (term)


State 101

   58 rexp: L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 132


State 102

   55 rexp: expression . comp expression
   77 term: L_PAREN expression . R_PAREN

    EQ       shift, and go to state 107
    NEQ      shift, and go to state 108
    LT       shift, and go to state 109
    GT       shift, and go to state 110
    LTE      shift, and go to state 111
    GTE      shift, and go to state 112
    R_PAREN  shift, and go to state 133

    comp  go to state 113


State 103

   79 term: IDENT L_PAREN . expressions R_PAREN

    SUB      shift, and go to state 68
    L_PAREN  shift, and go to state 86
    NUMBER   shift, and go to state 70
    IDENT    shift, and go to state 71

    expressions      go to state 134
    expression       go to state 123
    mult_expression  go to state 77
    term             go to state 78
    var              go to state 79


State 104

   81 var: IDENT L_SQUARE_BRACKET . expressions R_SQUARE_BRACKET

    SUB      shift, and go to state 68
    L_PAREN  shift, and go to state 86
    NUMBER   shift, and go to state 70
    IDENT    shift, and go to state 71

    expressions      go to state 135
    expression       go to state 123
    mult_expression  go to state 77
    term             go to state 78
    var              go to state 79


State 105

   50 bool_exp: relation_and_exp OR . bool_exp

    NOT      shift, and go to state 65
    TRUE     shift, and go to state 66
    FALSE    shift, and go to state 67
    SUB      shift, and go to state 68
    L_PAREN  shift, and go to state 69
    NUMBER   shift, and go to state 70
    IDENT    shift, and go to state 71

    bool_exp          go to state 136
    relation_and_exp  go to state 73
    relation_exp      go to state 74
    rexp              go to state 75
    expression        go to state 76
    mult_expression   go to state 77
    term              go to state 78
    var               go to state 79


State 106

   52 relation_and_exp: relation_exp AND . relation_and_exp

    NOT      shift, and go to state 65
    TRUE     shift, and go to state 66
    FALSE    shift, and go to state 67
    SUB      shift, and go to state 68
    L_PAREN  shift, and go to state 69
    NUMBER   shift, and go to state 70
    IDENT    shift, and go to state 71

    relation_and_exp  go to state 137
    relation_exp      go to state 74
    rexp              go to state 75
    expression        go to state 76
    mult_expression   go to state 77
    term              go to state 78
    var               go to state 79


State 107

   59 comp: EQ .

    $default  reduce using rule 59 (comp)


State 108

   60 comp: NEQ .

    $default  reduce using rule 60 (comp)


State 109

   61 comp: LT .

    $default  reduce using rule 61 (comp)


State 110

   62 comp: GT .

    $default  reduce using rule 62 (comp)


State 111

   63 comp: LTE .

    $default  reduce using rule 63 (comp)


State 112

   64 comp: GTE .

    $default  reduce using rule 64 (comp)


State 113

   55 rexp: expression comp . expression

    SUB      shift, and go to state 68
    L_PAREN  shift, and go to state 86
    NUMBER   shift, and go to state 70
    IDENT    shift, and go to state 71

    expression       go to state 138
    mult_expression  go to state 77
    term             go to state 78
    var              go to state 79


State 114

   69 expression: mult_expression SUB . expression

    SUB      shift, and go to state 68
    L_PAREN  shift, and go to state 86
    NUMBER   shift, and go to state 70
    IDENT    shift, and go to state 71

    expression       go to state 139
    mult_expression  go to state 77
    term             go to state 78
    var              go to state 79


State 115

   68 expression: mult_expression ADD . expression

    SUB      shift, and go to state 68
    L_PAREN  shift, and go to state 86
    NUMBER   shift, and go to state 70
    IDENT    shift, and go to state 71

    expression       go to state 140
    mult_expression  go to state 77
    term             go to state 78
    var              go to state 79


State 116

   71 mult_expression: term MULT . mult_expression

    SUB      shift, and go to state 68
    L_PAREN  shift, and go to state 86
    NUMBER   shift, and go to state 70
    IDENT    shift, and go to state 71

    mult_expression  go to state 141
    term             go to state 78
    var              go to state 79


State 117

   72 mult_expression: term DIV . mult_expression

    SUB      shift, and go to state 68
    L_PAREN  shift, and go to state 86
    NUMBER   shift, and go to state 70
    IDENT    shift, and go to state 71

    mult_expression  go to state 142
    term             go to state 78
    var              go to state 79


State 118

   73 mult_expression: term MOD . mult_expression

    SUB      shift, and go to state 68
    L_PAREN  shift, and go to state 86
    NUMBER   shift, and go to state 70
    IDENT    shift, and go to state 71

    mult_expression  go to state 143
    term             go to state 78
    var              go to state 79


State 119

   44 readVars: var COMMA . readVars

    IDENT  shift, and go to state 81

    readVars  go to state 144
    var       go to state 83


State 120

   46 writeVars: var COMMA . readVars

    IDENT  shift, and go to state 81

    readVars  go to state 145
    var       go to state 83


State 121

   77 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 133


State 122

   30 assign_variable: IDENT L_SQUARE_BRACKET expressions . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 146


State 123

   65 expressions: expression .
   66            | expression . COMMA expression

    COMMA  shift, and go to state 147

    $default  reduce using rule 65 (expressions)


State 124

   17 statements: statement SEMICOLON statements .

    $default  reduce using rule 17 (statements)


State 125

   28 st1: assign_variable ASSIGN expression .

    $default  reduce using rule 28 (st1)


State 126

   31 st2: if_bool THEN statements . ENDIF
   32 st3: if_bool THEN statements . if_else ENDIF

    ENDIF  shift, and go to state 148
    ELSE   shift, and go to state 149

    if_else  go to state 150


State 127

   35 st4: while_bool statements ENDLOOP .

    $default  reduce using rule 35 (st4)


State 128

   37 while_bool: while bool_exp BEGINLOOP .

    $default  reduce using rule 37 (while_bool)


State 129

   36 st5: do_loop WHILE bool_exp .

    $default  reduce using rule 36 (st5)


State 130

   39 do_loop: do statements ENDLOOP .

    $default  reduce using rule 39 (do_loop)


State 131

   78 term: SUB L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 151


State 132

   58 rexp: L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 58 (rexp)


State 133

   77 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 77 (term)


State 134

   79 term: IDENT L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 152


State 135

   81 var: IDENT L_SQUARE_BRACKET expressions . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 153


State 136

   50 bool_exp: relation_and_exp OR bool_exp .

    $default  reduce using rule 50 (bool_exp)


State 137

   52 relation_and_exp: relation_exp AND relation_and_exp .

    $default  reduce using rule 52 (relation_and_exp)


State 138

   55 rexp: expression comp expression .

    $default  reduce using rule 55 (rexp)


State 139

   69 expression: mult_expression SUB expression .

    $default  reduce using rule 69 (expression)


State 140

   68 expression: mult_expression ADD expression .

    $default  reduce using rule 68 (expression)


State 141

   71 mult_expression: term MULT mult_expression .

    $default  reduce using rule 71 (mult_expression)


State 142

   72 mult_expression: term DIV mult_expression .

    $default  reduce using rule 72 (mult_expression)


State 143

   73 mult_expression: term MOD mult_expression .

    $default  reduce using rule 73 (mult_expression)


State 144

   44 readVars: var COMMA readVars .

    $default  reduce using rule 44 (readVars)


State 145

   46 writeVars: var COMMA readVars .

    $default  reduce using rule 46 (writeVars)


State 146

   30 assign_variable: IDENT L_SQUARE_BRACKET expressions R_SQUARE_BRACKET .

    $default  reduce using rule 30 (assign_variable)


State 147

   66 expressions: expression COMMA . expression

    SUB      shift, and go to state 68
    L_PAREN  shift, and go to state 86
    NUMBER   shift, and go to state 70
    IDENT    shift, and go to state 71

    expression       go to state 154
    mult_expression  go to state 77
    term             go to state 78
    var              go to state 79


State 148

   31 st2: if_bool THEN statements ENDIF .

    $default  reduce using rule 31 (st2)


State 149

   34 if_else: ELSE . statements

    IF        shift, and go to state 38
    WHILE     shift, and go to state 39
    DO        shift, and go to state 40
    CONTINUE  shift, and go to state 41
    READ      shift, and go to state 42
    WRITE     shift, and go to state 43
    RETURN    shift, and go to state 44
    IDENT     shift, and go to state 45

    statements       go to state 155
    statement        go to state 47
    st1              go to state 48
    assign_variable  go to state 49
    st2              go to state 50
    st3              go to state 51
    if_bool          go to state 52
    st4              go to state 53
    st5              go to state 54
    while_bool       go to state 55
    while            go to state 56
    do_loop          go to state 57
    do               go to state 58
    st6              go to state 59
    st7              go to state 60
    st8              go to state 61
    st9              go to state 62


State 150

   32 st3: if_bool THEN statements if_else . ENDIF

    ENDIF  shift, and go to state 156


State 151

   78 term: SUB L_PAREN expression R_PAREN .

    $default  reduce using rule 78 (term)


State 152

   79 term: IDENT L_PAREN expressions R_PAREN .

    $default  reduce using rule 79 (term)


State 153

   81 var: IDENT L_SQUARE_BRACKET expressions R_SQUARE_BRACKET .

    $default  reduce using rule 81 (var)


State 154

   66 expressions: expression COMMA expression .

    $default  reduce using rule 66 (expressions)


State 155

   34 if_else: ELSE statements .

    $default  reduce using rule 34 (if_else)


State 156

   32 st3: if_bool THEN statements if_else ENDIF .

    $default  reduce using rule 32 (st3)
